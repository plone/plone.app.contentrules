Setup
-----

  >>> from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD
  >>> from plone.testing.zope import Browser
  >>> from plone.app.testing import setRoles
  >>> from plone.app.testing import TEST_USER_ID


  >>> portal = layer['portal']
  >>> setRoles(portal, TEST_USER_ID, ['Manager'])
  >>> # portal.portal_workflow.setDefaultChain('simple_publication_workflow')
  >>> if 'news' not in portal:
  ...     obj = portal.invokeFactory('Folder', 'news')
  >>> import transaction
  >>> transaction.commit()

  >>> browser = Browser(layer['app'])
  >>> browser.addHeader('Authorization',
  ...                   'Basic %s:%s' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD))


Let's visit the control panel and add a content rule.  We'll add a
rule with a triggering event of `Workflow state changed`:

  >>> browser.open(portal.absolute_url())
  >>> browser.getLink('Site Setup').click()
  >>> browser.getLink('Content Rules').click()
  >>> browser.getLink('Add content rule').click()
  >>> browser.getControl(name='form.widgets.title').value = 'Copy Published News'
  >>> ctrl = browser.getControl(name='form.widgets.event:list')
  >>> ctrl.value = ['Workflow state changed']
  >>> browser.getControl(name='form.buttons.save').click()

We're back at the control panel.  Now we'll edit the content rule.
We'll add a portal type condition for *news items* and a workflow state
condition for *published*:

  >>> browser.url
  'http://nohost/plone/++rule++rule-1/@@manage-elements'
  >>> browser.getControl(name=":action", index=0).value = ['plone.conditions.PortalType']
  >>> browser.getControl('Add', index=0).click()
  >>> browser.getControl('Content type').value = ['News Item']
  >>> browser.getControl('Save').click()

  >>> browser.getControl(name=":action", index=0).value = ['plone.conditions.WorkflowState']
  >>> browser.getControl('Add', index=0).click()
  >>> browser.getControl('Workflow state').value = ['published']
  >>> browser.getControl('Save').click()

Now comes the action, we want all news items to be copied into the
`/news` folder:

  >>> browser.getControl(name=":action", index=1).value = ['plone.actions.Copy']
  >>> browser.getControl(name='form.button.AddAction').click()
  >>> ctrl = browser.getControl(name='form.widgets.target_folder')
  >>> from plone.uuid.interfaces import IUUID
  >>> ctrl.value = IUUID(portal.news)
  >>> browser.getControl(name='form.buttons.save').click()

We're done with setting up the content rule.  We need to now apply the
rule to the root of the site before we try to add a news item:

  >>> browser.getLink('Home').click()
  >>> browser.getLink('Rules').click()
  >>> browser.getControl(name='rule_id').displayOptions
  ['Copy Published News']
  >>> browser.getControl('Add').click()

Let's go back and create the news item now:

  >>> browser.getLink('Home').click()
  >>> browser.getLink('Add new').click()
  >>> browser.getControl('News Item').click()
  >>> browser.getControl('Add').click()
  >>> browser.getControl('Title').value = 'My news item'
  >>> browser.getControl('Save').click()
  >>> 'Item created' in browser.contents
  True
  >>> browser.getLink('State:').click()
  >>> ctrl = browser.getControl(name='workflow_action') # XXX fix label
  >>> ctrl.value = ['publish']
  >>> browser.getControl('Save').click()

The news item should have been copied into the `news/` folder now:

  >>> 'my-news-item' in portal.news
  True

  >>> 'my-news-item' in portal
  True
